---
version: "3.9"

networks:
  tmt_network:
    driver: bridge

volumes:
  redpanda-0: null
  trial-data:
  gis-services-valhalla:
    external: true
    name: gis-services-valhalla
  gis-services-maptiler:
    external: true
    name: gis-services-maptiler
  gis-services-nominatim-data:
    external: true
    name: gis-services-nominatim-data
  gis-services-nominatim-postgress:
    external: true
    name: gis-services-nominatim-postgress

services:
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://0.0.0.0:${BROKER_PORT}
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:${REST_PORT}
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      # The amount of memory to make available to Redpanda.
      - --memory 1G
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # enable logs for debugging.
      - --default-log-level=debug
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.12
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - tmt_network
    ports:
      - ${BROKER_PORT}:19092
      - ${SCHEMA_PORT}:18081
      - ${REST_PORT}:18082
      - 19644:9644

  console:
    container_name: console
    image: docker.redpanda.com/vectorized/console:v2.3.5
    depends_on:
      - redpanda-0
    networks:
      - tmt_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - 8600:8080
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]

  bootstrapper:
    image: docker.io/drivereu/silent-producer:3.0.9
    networks:
      - tmt_network
    environment:
      SLEEP: 1000 # Wait before registering schemas
      KAFKA_HOST: redpanda-0:9092
      SCHEMA_REGISTRY: redpanda-0:8081
      PARTITION_SPECIFICATION: |
        system_heartbeat:1:600000
    restart: on-failure
    depends_on:
      - redpanda-0
    volumes:
      - ../schemas:/app/src/schemas

  # Reverse proxy

  reverse-proxy:
    container_name: reverse-proxy
    image: nginx:stable
    networks:
      - tmt_network
    ports:
      - "${DOCKERPORT}:80"
    volumes:
      - ./local-conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/usr/share/nginx/html:ro

  # Services

  time_service:
    container_name: time
    image: drivereu/test-bed-time-service:2.0.9
    depends_on:
      - redpanda-0
    ports:
      - "8100:8100"
    networks:
      - tmt_network
    volumes:
      - ./videos:/app/videos
    environment:
      KAFKA_BROKER_URL: redpanda-0:9092
      SCHEMA_REGISTRY_URL: redpanda-0:8081
      AUTO_REGISTER_SCHEMAS: "false"
      BILLBOARD: "true"

  trial_management_tool:
    container_name: tmt
    image: strategyeu/trial-management-tool:pairs
    depends_on:
      - redpanda-0
    ports:
      - "3210:3210"
    networks:
      - tmt_network
    environment:
      CLIENT_ID: TB-TrialMgmt
      KAFKA_HOST: redpanda-0:9092
      SCHEMA_REGISTRY: redpanda-0:8081
      TRIAL_MANAGER_SERVER_PORT: 3210
      PRODUCE: >
        system_tm_phase_message,system_tm_role_player,standard_cap,standard_geojson,
        simulation_request_startinject,simulation_entity_featurecollection,
        simulation_entity_post,inventory,request,resource,system_tm_info_msg
      SSL: "false"
      SSL_PFX: certs/TB-TrialMgmt.p12
      SSL_PASSPHRASE: changeit
      SSL_CA: certs/test-ca.pem
    volumes:
      - ./topics:/app/topics
      - trial-data:/app/trials

  # GIS services

  valhalla:
    container_name: gis-services-valhalla
    image: gisops/valhalla:${VALHALLA_VERSION}
    networks:
      - tmt_network
    volumes:
      - gis-services-valhalla:/custom_files
    environment:
      - use_tiles_ignore_pbf=True
      - build_elevation=False
      - build_admins=False
      - build_time_zones=False
      - build_tar=False
      - force_rebuild=False

  maptiler:
    container_name: gis-services-maptiler
    image: maptiler/tileserver-gl:${MAPTILER_VERSION}
    networks:
      - tmt_network
    volumes:
      - gis-services-maptiler:/data
    command:
      - "-u ${DOCKERPROTOCOL}${DOCKERDOMAIN}:${DOCKERPORT}/maptiler"

  # https://github.com/mediagis/nominatim-docker/tree/master/4.3
  # Test http://localhost/nominatim/search?q=Monaco&format=json&addressdetails=1&limit=1&polygon_svg=1
  nominatim:
    container_name: gis-services-nominatim
    image: mediagis/nominatim:${NOMINATIM_VERSION}
    networks:
      - tmt_network
    volumes:
      - gis-services-nominatim-data:/nominatim/data/
      - gis-services-nominatim-postgress:/var/lib/postgresql/12/main
    environment:
      - PBF_PATH=/nominatim/data/merged_areas.osm.pbf
      - FREEZE=true
